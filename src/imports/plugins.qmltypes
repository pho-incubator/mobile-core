import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable GroupsIncMvc 1.0'

Module {
    Component {
        name: "AssetModel"
        prototype: "MvcModel"
        exports: ["GroupsIncMvc/AssetModel 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "MvcFacade"
        prototype: "QObject"
        exports: ["GroupsIncMvc/MvcFacade 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "lateInit"
            Parameter { type: "QObject"; isPointer: true }
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "model"
            type: "MvcModel*"
            Parameter { name: "name"; type: "const char"; isPointer: true }
        }
        Method {
            name: "hasModel"
            type: "bool"
            Parameter { name: "name"; type: "const char"; isPointer: true }
        }
    }
    Component {
        name: "MvcModel"
        prototype: "QObject"
        Signal { name: "registered" }
    }
    Component {
        name: "ScreenModel"
        prototype: "MvcModel"
        exports: ["GroupsIncMvc/ScreenModel 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "dpi"; type: "int"; isReadonly: true }
        Property { name: "contentScaleFactor"; type: "double"; isReadonly: true }
        Property { name: "textScaleFactor"; type: "double"; isReadonly: true }
        Property { name: "devicePixelRatio"; type: "double"; isReadonly: true }
        Method {
            name: "dp"
            type: "double"
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "sp"
            type: "double"
            Parameter { name: "value"; type: "double" }
        }
    }
}
